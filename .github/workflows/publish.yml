name: publish
on:
  push:
    tags:
    - v[0-9]+.[0-9]+.[0-9]+
jobs:
  publish:
    name: Publish (${{ matrix.build }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build:
        - Ubuntu
        - macOS
        - Windows
        include:
        - build: Ubuntu
          os: ubuntu-latest
          env: { RUSTFLAGS: "-C target-cpu=haswell" }
        # target-cpu=haswell causes libz_sys to fail compilation on macOS
        - build: macOS
          os: macos-latest
          env: {}
        - build: Windows
          os: windows-latest
          env: { RUSTFLAGS: "-C target-cpu=haswell" }
      fail-fast: false

    steps:
    - name: Checkout the repo
      uses: actions/checkout@v2

    - name: Install Node
      uses: actions/setup-node@v1
      with:
        node-version: 14

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

    # Windows fails on `yarn exec` with "Couldn't find the binary", calling node directly
    - name: Build the binary
      shell: bash
      env: ${{ matrix.env }}
      run: |
        export npm_package_name=node-weakauras-parser
        yarn install --production=false --ignore-scripts
        node node_modules/cargo-cp-artifact/bin/cargo-cp-artifact.js -nc native/index.node -- cargo build --release --manifest-path=native/Cargo.toml --message-format=json-render-diagnostics

        if command -v sha512sum; then
          SHA512="$(sha512sum native/index.node | awk '{ print $1 }')"
        elif command -v shasum; then
          SHA512="$(shasum -a 512 native/index.node | awk '{ print $1 }')"
        elif command -v openssl; then
          SHA512="$(openssl dgst -sha512 native/index.node | awk '{ print $2 }')"
        fi
        echo "SHA-512 of native/index.node: ${SHA512:-N/A}"

    - name: Publish the binary
      shell: bash
      env:
        NODE_PRE_GYP_GITHUB_TOKEN: ${{ secrets.NODE_PRE_GYP_GITHUB_TOKEN }}
      run: |
        rm -rf native/target && yarn upload-binary || exit 0

  publish-alpine:
    name: Publish (Alpine Linux)
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the repo
      uses: actions/checkout@v2

    - name: Build the binary
      run: |
        docker build --build-arg RUSTFLAGS="-C target-cpu=haswell -C target-feature=-crt-static" -t nwp:latest -f .github/workflows/Dockerfile .

    - name: Publish the binary
      shell: bash
      run: |
        docker run --rm --env NODE_PRE_GYP_GITHUB_TOKEN="${{ secrets.NODE_PRE_GYP_GITHUB_TOKEN }}" nwp:latest yarn upload-binary || exit 0
